package solutions;

/**
 * Even Fibonacci numbers
 * Problem 2
 *
 * https://projecteuler.net/problem=2
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
 * first 10 terms will be:
 *
 *      1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
 * even-valued terms.
 */
public class Problem2 {

    public static void main(String[] args) {

        // the last 2 terms in the Fibonacci sequence
        int previousTerm = 1;
        int lastTerm = 2;

        // the sum of the even-valued terms
        int sum = 0;

        // values should not exceed four million
        while (lastTerm < 4_000_000){

            // check if the term is even
            if(lastTerm % 2 == 0) {
                // add it to the sum
                sum += lastTerm;
            }

            // finding the next term
            lastTerm += previousTerm;
            // updating the previous term
            previousTerm = lastTerm - previousTerm;
        }

        // print the sum
        System.out.println("The sum is: " + sum);
    }
}